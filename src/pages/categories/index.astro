---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { ViewTransitions } from 'astro:transitions';
import { SITE_TITLE } from '../../consts';
import "../../styles/global.css";
import { getCollection } from 'astro:content';

const posts = await getCollection('blog');

const categoryStats = posts.reduce((acc, post) => {
    if (post.data.category) {
        const category = post.data.category;
        if (acc[category]) {
            acc[category] += 1;
        } else {
            acc[category] = 1;
        }
    }
    return acc;
}, {});

const categories = Object.entries(categoryStats)
    .map(([name, count]) => ({ name, count }))
    .sort((a, b) => a.name.localeCompare(b.name));
---

<!doctype html>
<html lang="zh-TW">
    <head>
        <BaseHead title={`Folder - ${SITE_TITLE}`} description="瀏覽所有文章分類" />
		<ViewTransitions/>
    </head>
    <body>
        <Header />
        
        <main>
            <section class="hero-section">
                <h1 class="gradient-text">Floder</h1>
                <p class="hero-description">
					每個分類的資料夾 📂
                </p>
                <div class="hero-divider"></div>
            </section>

            {categories.length > 0 ? (
                <div class="categories-list">
                    {categories.map((category) => (
                        <a href={`/categories/${encodeURIComponent(category.name)}/`} class="category-item">
                            <span class="category-name">{category.name}</span>
                            <span class="category-count">{category.count}</span>
                        </a>
                    ))}
                </div>
            ) : (
                <div class="empty-state">
                    <div class="empty-icon">📂</div>
                    <h3>尚無分類</h3>
                    <p>還沒有任何文章分類</p>
                </div>
            )}
        </main>
        
        <Footer />

        <style>
            .categories-list {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
                gap: 1rem;
                margin-bottom: 3rem;
            }

            .category-item {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 1.25rem 1.5rem;
                background: rgba(var(--bg-card), 0.6);
                border: 1px solid rgba(var(--border), 0.2);
                border-radius: 8px;
                color: rgb(var(--gray));
                text-decoration: none;
                transition: all 0.3s ease;
            }

            .category-item:hover {
                background: rgba(var(--bg-hover), 0.8);
                border-color: var(--accent);
                color: rgb(var(--black));
                transform: translateY(-2px);
            }

            .category-name {
                font-weight: 500;
                font-size: 1rem;
            }

            .category-count {
                color: rgb(var(--text-muted));
                font-size: 0.9rem;
                transition: color 0.3s ease;
            }

            .category-item:hover .category-count {
                color: var(--accent);
            }

            /* 響應式 */
            @media (max-width: 720px) {
                .categories-list {
                    grid-template-columns: 1fr;
                    gap: 0.75rem;
                }

                .category-item {
                    padding: 1rem 1.25rem;
                }

                .category-name {
                    font-size: 0.95rem;
                }

                .category-count {
                    font-size: 0.85rem;
                }
            }
        </style>
    </body>
</html>
