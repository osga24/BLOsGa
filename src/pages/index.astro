---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import "../styles/global.css";
import Squares from '../components/Squares.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="zh-TW">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} /> 
	</head>
	<body>
		<Header />
		
		<!-- ËÉåÊôØË£ùÈ£æÂÖÉÁ¥† -->
		<div class="fixed inset-0 overflow-hidden pointer-events-none -z-10">
			<div class="absolute -top-40 -right-40 w-80 h-80 bg-purple-500/10 rounded-full blur-3xl"></div>
			<div class="absolute -bottom-40 -left-40 w-80 h-80 bg-blue-500/10 rounded-full blur-3xl"></div>
		</div>
		
		<main>
			<section class="hero-section">
				<h1 class="gradient-text">
					{SITE_TITLE}
				</h1>
				<p class="hero-description">
					{SITE_DESCRIPTION}
				</p>
				<div class="hero-divider"></div>
			</section>


			{posts.length > 0 ? (
				<div class="posts-grid">
					{posts.map((post) => (
						<article class="post-card card">
							<a href={`/blog/${post.id}/`} class="post-link">
								{post.data.heroImage && (
									<div class="post-image-container">
										<img
											class="post-image"
											width={post.data.heroImage.width}
											height={post.data.heroImage.height}
											src={post.data.heroImage.src}
											alt={post.data.title}
											loading="lazy"
											decoding="async"
										/>
									</div>
								)}
								
								<div class="post-content">
									{post.data.category && (
										<span class="tag post-category">
											{post.data.category}
										</span>
									)}

									<h3 class="post-title">
										{post.data.title}
									</h3>

									{post.data.description && (
										<p class="post-description">
											{post.data.description}
										</p>
									)}

									<div class="post-meta">
										<div class="post-tags">
											{post.data.tags && post.data.tags.slice(0, 3).map(tag => (
												<span class="tag">#{tag}</span>
											))}
											{post.data.tags && post.data.tags.length > 3 && (
												<span class="tag-more">+{post.data.tags.length - 3}</span>
											)}
										</div>
										
										<time class="post-date">
											<FormattedDate date={post.data.pubDate} />
										</time>
									</div>
								</div>
							</a>
						</article>
					))}
				</div>
			) : (
				<div class="empty-state">
					<div class="empty-icon">üìù</div>
					<h3>ÈÇÑÊ≤íÊúâÊñáÁ´†</h3>
					<p>ÈñãÂßãÂØ´‰Ω†ÁöÑÁ¨¨‰∏ÄÁØáÊñáÁ´†ÂêßÔºÅ</p>
				</div>
			)}
		</main>
		
		<Footer />

		<style>
			/* Hero Section */
			.hero-section {
				text-align: center;
				margin-bottom: 4rem;
			}
			
			.hero-description {
				font-size: 1.25rem;
				color: rgb(var(--gray));
				margin: 1.5rem 0;
				max-width: 600px;
				margin-left: auto;
				margin-right: auto;
			}
			
			.hero-divider {
				width: 100px;
				height: 4px;
				background: linear-gradient(to right, var(--accent), var(--accent-dark));
				border-radius: 2px;
				margin: 2rem auto;
			}
			
			
			/* Posts Grid */
			.posts-grid {
				display: grid;
				grid-template-columns: repeat(3, 1fr);
				gap: 2rem;
				margin-bottom: 3rem;
				align-items: start;
			}
			
			/* Post Cards */
			.post-card {
				margin-bottom: 0;
				height: 100%;
				display: flex;
				flex-direction: column;
			}
			
			.post-link {
				display: flex;
				flex-direction: column;
				color: inherit;
				text-decoration: none;
				height: 100%;
			}
			
			.post-link:hover {
				color: inherit;
			}
			
			/* Post Images */
			.post-image-container {
				margin: -1.5rem -1.5rem 1.5rem -1.5rem;
				overflow: hidden;
				border-radius: 12px 12px 0 0;
			}
			
			.post-image {
				width: 100%;
				height: 200px;
				object-fit: cover;
				transition: transform 0.3s ease;
			}
			
			.post-card:hover .post-image {
				transform: scale(1.05);
			}
			
			/* Post Content */
			.post-content {
				flex: 1;
				display: flex;
				flex-direction: column;
			}
			
			.post-category {
			display: inline-block;
			padding: 0.3rem 0.75rem;
			border-radius: 9999px;
			background-color: #3e2d63;
			color: #e0d4f7;
			font-weight: bold;
			margin-bottom: 1rem;
			}
			
			.post-title {
				color: rgb(var(--black));
				font-size: 1.25rem;
				font-weight: 700;
				margin: 0 0 1rem 0;
				line-height: 1.3;
				transition: color 0.3s ease;
				display: -webkit-box;
				-webkit-line-clamp: 2;
				-webkit-box-orient: vertical;
				overflow: hidden;
			}
			
			.post-card:hover .post-title {
				color: var(--accent);
			}
			
			.post-description {
				color: rgb(var(--gray));
				font-size: 0.9rem;
				line-height: 1.5;
				margin-bottom: auto;
				display: -webkit-box;
				-webkit-line-clamp: 3;
				-webkit-box-orient: vertical;
				overflow: hidden;
			}
			
			/* Post Meta */
			.post-meta {
				display: flex;
				justify-content: space-between;
				align-items: flex-end;
				flex-wrap: wrap;
				gap: 0.75rem;
				padding-top: 1rem;
				border-top: 1px solid rgb(var(--border-primary));
				margin-top: 1rem;
			}
			
			.post-tags {
				display: flex;
				flex-wrap: wrap;
				gap: 0.25rem;
				align-items: center;
				flex: 1;
			}
			
			.post-tags .tag {
				font-size: 0.7rem;
				padding: 0.2rem 0.5rem;
			}
			
			.tag-more {
				font-size: 0.7rem;
				color: rgb(var(--text-muted));
			}
			
			.post-date {
				font-size: 0.8rem;
				color: rgb(var(--text-muted));
				white-space: nowrap;
				flex-shrink: 0;
			}
			
			/* Empty State */
			.empty-state {
				text-align: center;
				padding: 4rem 2rem;
				color: rgb(var(--gray));
			}
			
			.empty-icon {
				font-size: 4rem;
				margin-bottom: 1rem;
			}
			
			.empty-state h3 {
				color: rgb(var(--black));
				margin-bottom: 0.5rem;
			}
			
			/* ÈüøÊáâÂºèË™øÊï¥ */
			@media (max-width: 720px) {
				.posts-grid {
					grid-template-columns: 1fr;
					gap: 1.5rem;
				}
				
				.hero-description {
					font-size: 1.125rem;
				}
				
				.post-title {
					font-size: 1.25rem;
				}
				
				.post-description {
					font-size: 0.9rem;
					-webkit-line-clamp: 2;
				}
				
				.post-meta {
					flex-direction: column;
					align-items: flex-start;
					gap: 0.75rem;
				}
				
				.post-date {
					align-self: flex-end;
				}
			}
			
			@media (max-width: 900px) and (min-width: 721px) {
				.posts-grid {
					grid-template-columns: repeat(2, 1fr);
				}
			}
		</style>
	</body>
</html>
