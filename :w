---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import "../styles/global.css";
import Squares from '../components/Squares.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="zh-TW">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} /> 
	</head>
	<body>
		<Header />
		
		<!-- 背景裝飾元素 -->
		<div class="fixed inset-0 overflow-hidden pointer-events-none -z-10">
			<div class="absolute -top-40 -right-40 w-80 h-80 bg-purple-500/10 rounded-full blur-3xl"></div>
			<div class="absolute -bottom-40 -left-40 w-80 h-80 bg-blue-500/10 rounded-full blur-3xl"></div>
		</div>
		
		<main class="min-h-screen">
			<!-- Hero Section -->
			<section class="container mx-auto px-6 py-16 text-center">
				<h1 class="gradient-text mb-6">
					{SITE_TITLE}
				</h1>
				<p class="hero-description">
					{SITE_DESCRIPTION}
				</p>
				<div class="flex justify-center mt-8">
					<div class="w-24 h-1 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full"></div>
				</div>
			</section>

			<!-- Blog Posts Section -->
			<section class="container mx-auto px-6 pb-16">
				<div class="text-center mb-12">
					<h2 class="section-title">最新文章</h2>
					<p class="section-description">探索我的想法與經驗分享</p>
				</div>

				{posts.length > 0 ? (
					<div class="posts-grid">
						{posts.map((post) => (
							<article class="post-card group">
								<a href={`/blog/${post.id}/`} class="post-link">
									{post.data.heroImage && (
										<div class="post-image-container">
											<img
												class="post-image"
												width={post.data.heroImage.width}
												height={post.data.heroImage.height}
												src={post.data.heroImage.src}
												alt={post.data.title}
												loading="lazy"
												decoding="async"
											/>
											<div class="post-image-overlay"></div>
										</div>
									)}
									
									<div class="post-content">
										{post.data.category && (
											<div class="post-category-container">
												<span class="post-category">
													{post.data.category}
												</span>
											</div>
										)}

										<h3 class="post-title">
											{post.data.title}
										</h3>

										{post.data.description && (
											<p class="post-description">
												{post.data.description}
											</p>
										)}

										<div class="post-footer">
											<div class="post-meta">
												{post.data.tags && (
													<div class="post-tags">
														{post.data.tags.slice(0, 3).map(tag => (
															<span class="post-tag">
																#{tag}
															</span>
														))}
														{post.data.tags.length > 3 && (
															<span class="post-tag-more">
																+{post.data.tags.length - 3}
															</span>
														)}
													</div>
												)}
												
												<time class="post-date">
													<svg class="post-date-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
														<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
													</svg>
													<FormattedDate date={post.data.pubDate} />
												</time>
											</div>
										</div>
									</div>
								</a>
							</article>
						))}
					</div>
				) : (
					<div class="empty-state">
						<div class="empty-state-icon">
							<svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
							</svg>
						</div>
						<h3 class="empty-state-title">還沒有文章</h3>
						<p class="empty-state-description">開始寫你的第一篇文章吧！</p>
					</div>
				)}
			</section>
		</main>
		
		<!-- <Footer /> -->

		<style>
			/* 容器和佈局 */
			.container {
				max-width: 1200px;
			}
			
			/* Hero Section */
			.gradient-text {
				font-size: clamp(2.5rem, 5vw, 4rem);
				font-weight: 700;
				background: linear-gradient(to right, rgb(196, 181, 253), rgb(244, 114, 182), rgb(96, 165, 250));
				-webkit-background-clip: text;
				background-clip: text;
				-webkit-text-fill-color: transparent;
				line-height: 1.1;
				margin: 0;
			}
			
			.hero-description {
				font-size: 1.25rem;
				color: rgb(156, 163, 175);
				max-width: 32rem;
				margin: 0 auto;
				line-height: 1.7;
			}
			
			/* Section Headers */
			.section-title {
				font-size: clamp(2rem, 4vw, 3rem);
				font-weight: 700;
				color: white;
				margin: 0 0 1rem 0;
			}
			
			.section-description {
				color: rgb(156, 163, 175);
				font-size: 1.125rem;
				margin: 0;
			}
			
			/* Posts Grid */
			.posts-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
				gap: 2rem;
				margin-top: 3rem;
				justify-items: center;
				max-width: 1200px;
				margin-left: auto;
				margin-right: auto;
			}
			
			@media (max-width: 768px) {
				.posts-grid {
					grid-template-columns: 1fr;
					gap: 1.5rem;
					max-width: 500px;
				}
			}
			
			/* Post Cards */
			.post-card {
				background: rgba(31, 41, 55, 0.5);
				backdrop-filter: blur(8px);
				border-radius: 1rem;
				border: 1px solid rgba(75, 85, 99, 0.5);
				overflow: hidden;
				transition: all 0.3s ease;
				width: 100%;
				max-width: 380px;
			}
			
			.post-card:hover {
				transform: translateY(-8px);
				border-color: rgba(168, 85, 247, 0.5);
				box-shadow: 0 25px 50px -12px rgba(168, 85, 247, 0.1);
			}
			
			.post-link {
				display: block;
				text-decoration: none;
				color: inherit;
			}
			
			/* Post Images */
			.post-image-container {
				position: relative;
				overflow: hidden;
				height: 12rem;
			}
			
			.post-image {
				width: 100%;
				height: 100%;
				object-fit: cover;
				transition: transform 0.5s ease;
			}
			
			.post-card:hover .post-image {
				transform: scale(1.1);
			}
			
			.post-image-overlay {
				position: absolute;
				inset: 0;
				background: linear-gradient(to top, rgba(17, 24, 39, 0.6), transparent);
			}
			
			/* Post Content */
			.post-content {
				padding: 1.5rem;
			}
			
			.post-category-container {
				margin-bottom: 0.75rem;
			}
			
			.post-category {
				display: inline-block;
				padding: 0.25rem 0.75rem;
				font-size: 0.75rem;
				font-weight: 600;
				background: rgba(168, 85, 247, 0.2);
				color: rgb(196, 181, 253);
				border-radius: 9999px;
				border: 1px solid rgba(168, 85, 247, 0.3);
			}
			
			.post-title {
				font-size: 1.25rem;
				font-weight: 700;
				color: white;
				margin: 0 0 0.75rem 0;
				line-height: 1.4;
				transition: color 0.3s ease;
				display: -webkit-box;
				-webkit-line-clamp: 2;
				-webkit-box-orient: vertical;
				overflow: hidden;
			}
			
			.post-card:hover .post-title {
				color: rgb(196, 181, 253);
			}
			
			.post-description {
				color: rgb(156, 163, 175);
				font-size: 0.875rem;
				line-height: 1.6;
				margin: 0 0 1rem 0;
				display: -webkit-box;
				-webkit-line-clamp: 3;
				-webkit-box-orient: vertical;
				overflow: hidden;
			}
			
			/* Post Footer */
			.post-footer {
				border-top: 1px solid rgba(75, 85, 99, 0.5);
				padding-top: 1rem;
			}
			
			.post-meta {
				display: flex;
				align-items: center;
				justify-content: space-between;
				flex-wrap: wrap;
				gap: 0.75rem;
			}
			
			.post-tags {
				display: flex;
				flex-wrap: wrap;
				gap: 0.5rem;
				align-items: center;
			}
			
			.post-tag {
				font-size: 0.75rem;
				padding: 0.25rem 0.5rem;
				background: rgba(75, 85, 99, 0.5);
				color: rgb(156, 163, 175);
				border-radius: 0.375rem;
				border: 1px solid rgba(107, 114, 128, 0.5);
			}
			
			.post-tag-more {
				font-size: 0.75rem;
				color: rgb(107, 114, 128);
			}
			
			.post-date {
				display: flex;
				align-items: center;
				font-size: 0.875rem;
				color: rgb(107, 114, 128);
				white-space: nowrap;
			}
			
			.post-date-icon {
				width: 1rem;
				height: 1rem;
				margin-right: 0.25rem;
			}
			
			/* Empty State */
			.empty-state {
				text-align: center;
				padding: 4rem 0;
			}
			
			.empty-state-icon {
				width: 6rem;
				height: 6rem;
				margin: 0 auto 1.5rem;
				background: rgb(31, 41, 55);
				border-radius: 50%;
				display: flex;
				align-items: center;
				justify-content: center;
			}
			
			.empty-state-icon svg {
				width: 3rem;
				height: 3rem;
				color: rgb(107, 114, 128);
			}
			
			.empty-state-title {
				font-size: 1.25rem;
				font-weight: 600;
				color: rgb(209, 213, 219);
				margin: 0 0 0.5rem 0;
			}
			
			.empty-state-description {
				color: rgb(107, 114, 128);
				margin: 0;
			}
			
			/* 響應式調整 */
			@media (max-width: 640px) {
				.container {
					padding-left: 1rem;
					padding-right: 1rem;
				}
				
				.hero-description {
					font-size: 1.125rem;
				}
				
				.post-content {
					padding: 1.25rem;
				}
				
				.post-meta {
					flex-direction: column;
					align-items: flex-start;
					gap: 0.5rem;
				}
			}
		</style>
	</body>
</html>
